spring:
  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379

  # MySQL 설정
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/goods?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
#    username: root
#    password: 1234

  # 도커용 db
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #    url: jdbc:mysql://127.0.0.1:3306/goodsDb
    url: jdbc:mysql://mysql-container:3306/goodsDb
    username: root
    password: unity-goods

  #JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    generate-ddl: true
    properties:
      hibernate:
        show_sql: true
    database: mysql
    defer-datasource-initialization: true

  #JWT 설정
  jwt:
    secret: VGhpcyBpcyBhIHByb2plY3QgZnJvbSB0aGUgVW5pdHkgdGVhbS4gVGhlIHNlcnZpY2UgbmFtZSBpcyBnb29kcyBhbmQgaXQgaXMgYSBwbGF0Zm9ybSB0aGF0IHN1cHBvcnRzIHVzZWQgZ29vZHMgdHJhbnNhY3Rpb25zLg
    access-token-expiration-time: 3600000 # 60분(60*60*1000L) ms
    refresh-token-expiration-time: 1209600000 # 14일(7*24*60*60*1000L) ms

  # Email 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connection timeout: 5000
          timeout: 5000
          write timeout: 5000
      auth-code-expiration-millis: 600000  # 10 * 60 * 1000 == 10분. redis 유효시간 + 안전장치

  servlet:
    multipart:
      maxFileSize: 10MB
      max-request-size: 50MB

# AWS S3 설정
cloud:
  aws:
    region:
      static: ap-northeast-2
    s3:
      bucket:
      baseUrl: https://'개인 버킷 이름'.s3.ap-northeast-2.amazonaws.com/
    stack:
      auto: false
    credentials:
      access-key:
      secret-key:
