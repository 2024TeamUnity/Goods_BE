spring:
  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379

    elasticsearch:
      repositories:
        enabled: true
      url: localhost:9200

  # MySQL 설정
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/goods?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
#    username: root
#    password: 1234

  # 도커용 db
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #    url: jdbc:mysql://127.0.0.1:3306/goodsDb
    url: jdbc:mysql://mysql-container:3306/goodsDb
    username: root
    password: unity-goods

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    generate-ddl: true
    properties:
      hibernate:
        show_sql: true
    database: mysql
    defer-datasource-initialization: true

  # JWT 설정
  jwt:
    secret: VGhpcyBpcyBhIHByb2plY3QgZnJvbSB0aGUgVW5pdHkgdGVhbS4gVGhlIHNlcnZpY2UgbmFtZSBpcyBnb29kcyBhbmQgaXQgaXMgYSBwbGF0Zm9ybSB0aGF0IHN1cHBvcnRzIHVzZWQgZ29vZHMgdHJhbnNhY3Rpb25zLg
    access-token-expiration-time: 3600000 # 60분(60*60*1000L) ms
    refresh-token-expiration-time: 1209600000 # 14일(14*24*60*60*1000L) ms

  # OAuth
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: Kakao
            client-id: '78aa8c2cf25d7d7b1c1b4a5993f9901e'
            client-secret: '7yrCiP8LvQiqbir1lrV5wnNMXlw2TkbG'
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/api/oauth/code/{registrationId}'

            scope:
              - profile_nickname
              - profile_image
              - account_email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id

        # 로그인 요청 경로 : http://localhost:8080/oauth2/authorization/kakao

  # Email 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connection timeout: 5000
          timeout: 5000
          write timeout: 5000
      auth-code-expiration-millis: 600000  # 10 * 60 * 1000 == 10분. redis 유효시간 + 안전장치

  servlet:
    multipart:
      maxFileSize: 10MB
      max-request-size: 50MB

# AWS S3 설정
cloud:
  aws:
    region:
      static: ap-northeast-2
    s3:
      bucket: goods
      baseUrl: https://'개인 버킷 이름'.s3.ap-northeast-2.amazonaws.com/
    stack:
      auto: false
    credentials:
      access-key: accessKey
      secret-key: secretKey
logging:
  level:
    org:
      springframework:
        data:
          elasticsearch:
            client:
              WIRE=DEBUG:



firebase:
  service:
    key: ew0KICAidHlwZSI6ICJzZXJ2aWNlX2FjY291bnQiLA0KICAicHJvamVjdF9pZCI6ICJnb29kcy01NGY3ZCIsDQogICJwcml2YXRlX2tleV9pZCI6ICI4NmYyMGVkMmFiZTdiYjI5MWVkMzQwZGVkNWYyYmNjZTM0NWYyM2UxIiwNCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVkt
      LS0tLVxuTUlJRXZBSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS1l3Z2dTaUFnRUFBb0lCQVFESlpCTEJpSFVkSUU0blxuN3ZPUmMwZktKOUFWZThWbkFGSkxFZDVVNVRuVm15TnlaTG43MWdDTytsSFB2bXZZR2o0bGFOTWhuZVppQ1IwQ1xubkhydWQ2MHNZN0o1cW9KcVVFOEFNLytwbC9EcTlnZlcx
      R25qaXQya25RU0NGZVJXL1BIWEFxTHJLd3Y4OHdhMlxueEJ0bWRWb0ppNVlxUXBaS0JScTZ6c1QwRXhna0NScXpWQ21mZzRIMFgwSzRBS09JWW00OVYyNngyQ0drZW9vT1xuSDhBeklkMFZpb3NTa2xudytXeC9HYVlHM01uamM4TllLREczcEhOOXhtRXp5d1VwTldIZk1MclpNaHpUdlk0dlxueEt2ZE5L
      Y0xBZ3lDL0JOMXhXcHQ1bnc5cVgrdVRXOFNEOFAzYXpYTWdPb0pCb1RuRW14MG5lcGp3cHBzNDZoR1xuZUhocVBCVEZBZ01CQUFFQ2dnRUFBY0t0cDNBVzAvN1JES2crbm5ocUhsa1pZL1Q0Nnk0TVhHWDkrMDQzaHhuMVxuSE9kRzNhUytnNU84aUVabjAyOVJTdmlqZ1VYVStudkUxdWJsb3V2T2lvMkwx
      MlNBZ1d2RVhyMTZNbnRMU3FzWFxuSVBQaGVLZkY3YnZHWFZsMmtmNkdqNjNINWs4RWFzWlR6SVRaYWNFZjd4M0l1VHFpYlRFbUJFYXRGcFFlQWt5ZVxuUDJBWklWa3d2SGgxNUxOcEZybzFKUmFQOUM2MExDWHZxZ1Y0TEVJOFVmSnAySnVnWmN6Szd0cFFUVnhRODlVN1xuUm5FR09wNGIxelRDMVJ3cE1K
      ZXlnWVRkcjJFeFVmWDlIMTBJcFJQaENGZDUxTWhSODVqNE9wVzVhM1dZSlVDYVxua2R3dXhnL3ROUXFZcS9yZ2VhUVNCUnZjTFM1RWpxcUtxRTVhekUwdkVRS0JnUURtYVZ3TDZiZnRYdWFaeEVFY1xuOEtuZEFSQ0YxYVpvZkp3VmlVVGo5cnNXRUtkRUtKUWZTcWFzT1NWeUlGeHlVQXVZUVhhMmp3aUpj
      YkZQdlQzTVxuZVpyeUphV0pJZ0ljdGFrcXd3VXJieG84N3lST0RSanJXTEhiTDBKS2dyYVlnVWp4eC9qVmNrNjdhVDQ1UmlndVxuMm1YbGczNTZCS3QrRDBwVzdsZkFNOWhLTVFLQmdRRGZ3YWJSWHFTV0g3TnpSZjVHZElyV2Rpbnc1K2JQN29MaVxueUk2K2k3b3BFZThKSEY5S05mTXQrWmRRdVhXdlpW
      ekovdlM0YlJENkd1RDU5dzZzNWdyWEcySGxoMTFsQmFyMVxuQ2JNcFh3c0hUWnRmWTJzN0xITEU5R04rZFptcEpjR25BYmJFSnB1UlZkUzNmbVh0dzhqSVc2TzlkN1ZKYm9UclxueU9PeGZOdDYxUUtCZ0JibEFUQnQyTWpOVlR5U002WWNnOFJpQnJKRnVITkpibmoxV3RNTUFTc0FISjY1S1g2eVxuZkQx
      QXNHZldyMWpzZXpwMXhzWDlFR3dYei9hTVowZWFEYnRoNGtEdUVDZXFKVlVLYThrVkVSWmM3TTZVbnBWRVxuQ3Vnc21mbXRZMWRrQVV1RkEwU3lSd0I0UkthTVFoSGx3Wm84cHFTWk1qRWtjODZQZ0VpbzNpVUJBb0dBSGttUlxuTWcvMGlWbWJLY1JVcWViR2tFY0lZRktUbkp1MVhjczEvemJjcVFpRGFh
      Rk1pTGdLeGJOZU54QVRqUDFVZFFjc1xueXZZQWNVcElINjNBYjhqbnVMdzlJUnVVbWNNTnBBTi9HOStBbDZsNm1ZdlVqUHIwUWhLdWtRU01HeWhBTVVIN1xuSWt2empOV29hSG9VZy8yWFpQOTZoMy8zcXd2cHRCektMVkV3U0UwQ2dZQUYvRnQ2NCt5b0dLVkZ5MkkwYTZqcVxuVWhncEdsUzFwckY3SHBx
      MXYxZlcweUNtRk1GSHVueWk0K3ozc29xRFl6RHUzalJKcURiNmFyRlgzS3M5R2Vxc1xudzM1MzJocFhyNHQ0a0U5VFJnRjJySHRHSUQreUg0WlFkQVVFais0M2ZUUkpQUWY3R3RWNGNyMEUxR1lSMWh6WlxubVdQeXpvTkVybjNJSHVLYXVCR01pdz09XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4i
      LA0KICAiY2xpZW50X2VtYWlsIjogImZpcmViYXNlLWFkbWluc2RrLTEzdmdxQGdvb2RzLTU0ZjdkLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwNCiAgImNsaWVudF9pZCI6ICIxMTY4OTM5NjA3MTc2ODYyMTY0NzMiLA0KICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28v
      b2F1dGgyL2F1dGgiLA0KICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwNCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLA0KICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9maXJlYmFzZS1hZG1pbnNkay0xM3ZncSU0MGdvb2RzLTU0ZjdkLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwNCiAgInVuaXZlcnNlX2RvbWFpbiI6ICJnb29nbGVhcGlzLmNvbSINCn0=